rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Users can read their own communities
      match /communities/{communityId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Users can read their own notifications
      match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Communities - allow read for authenticated users, write for authenticated users
    // Validate username uniqueness on write
    match /communities/{communityId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        // Allow if no username field or username is unique
        !('username' in request.resource.data) ||
        // Check username uniqueness across users and communities
        !exists(/databases/$(database)/documents/users/{userId}) ||
        !exists(/databases/$(database)/documents/communities/{otherCommunityId})
      );
    }
    
    // Posts - allow read with community-based filtering
    match /posts/{postId} {
      allow read: if request.auth != null && (
        // Allow posts without communityId (general posts)
        !('communityId' in resource.data) ||
        // Allow posts from public communities
        (('communityId' in resource.data) && 
         get(/databases/$(database)/documents/communities/$(resource.data.communityId)).data.isPrivate != true) ||
        // Allow posts from private communities if user is a member
        (('communityId' in resource.data) && 
         get(/databases/$(database)/documents/communities/$(resource.data.communityId)).data.isPrivate == true &&
         exists(/databases/$(database)/documents/users/$(request.auth.uid)/communities/$(resource.data.communityId)))
      );
      allow write: if request.auth != null;
      
      // Allow reading comments
      match /comments/{commentId} {
        allow read, write: if request.auth != null;
      }
    }
    
    // Join requests - allow read/write for authenticated users
    match /joinRequests/{requestId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Comments - allow read/write for authenticated users
    match /comments/{commentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow reading other users' basic data for display purposes (including usernames)
    match /users/{userId} {
      allow read: if request.auth != null;
    }
  }
}
